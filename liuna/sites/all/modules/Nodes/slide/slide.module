<?php



function slide_node_info(){
	return array(
		'slide'=> array(
			'name' 		=> 'Slider entries',
			'base' 		=> 'slide',
			'description'	=> 'Entries here apear in front slider',
			'has_title'	=> 'TRUE',
			'title_label'	=> 'Title',
			'help'		=> 'Entries here are displayed the ... field shows and the ... shows'
		)
	);
};


function slide_form($node,$form_state){
	return node_content_form($node,$form_state);
}


function slide_node_access($node, $op, $account) {
 
	$type = is_string($node) ? $node : $node->type;

	$q=user_access('create ' . $type . ' content', $account);
	$qq=user_role_permissions(array('admin'));
	$qqq='create ' . $type . ' content';

  if (in_array($type, node_permissions_get_configured_types())) {
    if ($op == 'create' && user_access('create ' . $type . ' content', $account)) {
      return NODE_ACCESS_ALLOW;
    }

    if ($op == 'update') {
      if (user_access('edit any ' . $type . ' content', $account) || (user_access('edit own ' . $type . ' content', $account) && ($account->uid == $node->uid))) {
        return NODE_ACCESS_ALLOW;
      }
    }

    if ($op == 'delete') {
      if (user_access('delete any ' . $type . ' content', $account) || (user_access('delete own ' . $type . ' content', $account) && ($account->uid == $node->uid))) {
        return NODE_ACCESS_ALLOW;
      }
    }
  }

  // Returning nothing from this function would have the same effect.
  return NODE_ACCESS_IGNORE;
}









// vim: set ft=php:
?>
