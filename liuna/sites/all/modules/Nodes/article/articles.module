<?php
/**
 * @file
 * Lets user create articless in the articles section of the site.
 *
 * Displays a link that lets authenticated users create articles section articless.
 * All these articless are viewable by default to all the sites visitors.
 * Pages do not need to be approved. Default is to display the articles.
 */

/**
 * Implementation of hook_menu().
 */



function articles_menu() {

};


/**
 * Implements hook_node_info() to provide info articles type.
 */


function articles_node_info(){
	return array(
		'articles'=> array(
			'name' 		=> 'Article Pages',
			'base' 		=> 'articles',
			'description'	=> 'Union Article Pages',
			'has_title'	=> 'TRUE',
			'title_label'	=> 'Page Name',
			'help'		=> 'Page will be displayed in taxnav menu based on taxonomy'
		)
	);
};



/// adjust user form
function articles_form_alter(&$form, &$form_state, $form_id){


drupal_set_message($form_id);


if($form_id == 'page_node_form'){
dpm($form, 'form');
dpm($form_state,'form state');
}



	if( !($form_id =='user_register_form' || $form_id == 'user_profile+_form') ){
		return;
	}


		$form['#validate'][] = 'is_union_form_validate';

	

		$form['union']	= array();
			$form['union']['#type']		= 'select';
			$form['union']['#title']	= 'Union';
				$form['union']['#options']	= array();
					$form['union']['#options'][] ='If you see this it is in ERROR';

				//$form['union']['#pre_render'] = array('spo');

				$form['union']['#description']	= 'Union the user writes articles for';
	
}


function is_union_form_validate($form, &$form_state){


}
////////////////////

function spo($element){
dpm($element);

	$element['#options'] = array();
		$element['#options'][] = 'a';
		$element['#options'][] = 'b';
		$element['#options'][] = 'c';


return $element;
}





/**
 * Implement hook_form() with the standard default form.
 */
function articles_form($node,$form_state){
	xdebug_break();
	return node_content_form($node,$form_state);
}

function articles_node_access($node, $op, $account) {
 
	$type = is_string($node) ? $node : $node->type;

	$q=user_access('create ' . $type . ' content', $account);
	$qq=user_role_permissions(array('admin'));
	$qqq='create ' . $type . ' content';

  if (in_array($type, node_permissions_get_configured_types())) {
    if ($op == 'create' && user_access('create ' . $type . ' content', $account)) {
      return NODE_ACCESS_ALLOW;
    }

    if ($op == 'update') {
      if (user_access('edit any ' . $type . ' content', $account) || (user_access('edit own ' . $type . ' content', $account) && ($account->uid == $node->uid))) {
        return NODE_ACCESS_ALLOW;
      }
    }

    if ($op == 'delete') {
      if (user_access('delete any ' . $type . ' content', $account) || (user_access('delete own ' . $type . ' content', $account) && ($account->uid == $node->uid))) {
        return NODE_ACCESS_ALLOW;
      }
    }
  }

  // Returning nothing from this function would have the same effect.
  return NODE_ACCESS_IGNORE;
}



function articles_node_insert($node){
	//require_once(drupal_get_path('module','taxnav'));
	//build();
}




/* vim: set filetype=php : */
?>
