<?php


/* vim: set filetype=php : */

/**
 * @file
 * Install file for About pages node.
 */
function union_install()
{

	$taxnav_vid = variable_get('taxnav_vocabulary');

		$union_term = array();
			$union_term['name'] 	= 'unions';
			$union_term['vid']	= $taxnav_vid;
				$union_term=(object)$union_term;
					 taxonomy_term_save($union_term);

xdebug_break();
		$workers_term = array();
			$workers_term['name']	= 'workers';
			$workers_term['vid']	= $taxnav_vid;
			$workers_term['parent']	= $union_term->tid;
				$workers_term = (object)$workers_term;
				$workers_term_term_id = taxonomy_term_save($workers_term);

		$heavy_term = array();
			$heavy_term['name']	= 'heavy';
			$heavy_term['vid']	= $taxnav_vid;
			$heavy_term['parent']	= $union_term->tid;
				$heavy_term = (object)$heavy_term;
				$heavy_term_term_id = taxonomy_term_save($heavy_term);

		$non_term = array();
			$non_term['name'] 	= 'non';
			$non_term['vid']	= $taxnav_vid;
			$non_term['parent'] 	= $union_term->tid;
				$non_term = (object)$non_term;
				$non_term_term_id = taxonomy_term_save($non_term);

	node_types_rebuild();

	
	$union_image_field = array();
		$union_image_field['field_name']	= 'union_image_field';
		$union_image_field['type']		= 'image';
				field_create_field($union_image_field);

	$union_image_field_instance = array();
		$union_image_field_instance['field_name']	= 'union_image_field';   
		$union_image_field_instance['entity_type']	= 'node';   
		$union_image_field_instance['bundle']		= 'union';   
		$union_image_field_instance['required']		=  1;   
			$union_image_field_instance['settings']  = array();   
				$union_image_field_instance['settings']['alt_field']		= 1;
				#$union_image_field_instance['settings']['file_extensions']	= array('jpg','jpeg','png');
				$union_image_field_instance['settings']['max_filesize']		= '5 MB';
				$union_image_field_instance['settings']['min_resolution']	= '10 x 10';
				$union_image_field_instance['settings']['title_field']		=  1;
			#$union_image_field_instance['widget'] = array();
				#$union_image_field_instance['widget']['type'] 		= 'image_image';
				#$union_image_field_instance['widget']['settings']	= 'preview_image_style';
					field_create_instance($union_image_field_instance);
	 

	

	$types = node_type_get_types();
	node_add_body_field($types['union']);
	$body_instance = field_info_instance('node','body','union');
		$body_instance['type'] = 'text_summary_or_trimmed';

		field_update_instance($body_instance);




	
	$union_taxnav_vocabulary_field = array();
		$union_taxnav_vocabulary_field['field_name']	= 'union_taxnav_vocabulary';
		$union_taxnav_vocabulary_field['type']		= 'taxonomy_term_reference';
		$union_taxnav_vocabulary_field['settings'] 	=  array();
			$union_taxnav_vocabulary_field['settings']['allowed_values'] = array();
				$union_taxnav_vocabulary_field['settings']['allowed_values'][0]=array();
					$union_taxnav_vocabulary_field['settings']['allowed_values'][0]['vocabulary']	= 'taxnav_vocabulary';
					$union_taxnav_vocabulary_field['settings']['allowed_values'][0]['parent']	= $union_term->tid;
						field_create_field($union_taxnav_vocabulary_field);



	$union_taxnav_vocabulary_instance = array();
	$union_taxnav_vocabulary_instance['field_name']		= 'union_taxnav_vocabulary';
	$union_taxnav_vocabulary_instance['entity_type']	= 'node';
 	$union_taxnav_vocabulary_instance['bundle'] 		= 'union';
	 	$union_taxnav_vocabulary_instance['widget'] 	= array();
			$union_taxnav_vocabulary_instance['widget']['type']	= 'options_select';
			$union_taxnav_vocabulary_instance['widget']['display'] 	= array();
			$union_taxnav_vocabulary_instance['widget']['display']['full'] = array();
				$union_taxnav_vocabulary_instance['widget']['display']['full']['type'] = 'taxonomy_term_reference_link';
						field_create_instance($union_taxnav_vocabulary_instance);
	 

	$union_address_field = array();
		$union_address_field['field_name']	= 'union_address_field';
		$union_address_field['type']		= 'text';
			field_create_field($union_address_field);

	$union_address_instance = array();
		$union_address_instance['field_name']	= 'union_address_field';
		$union_address_instance['entity_type']	= 'node';
		$union_address_instance['bundle']	= 'union';
			//$union_address_instance['widget'] = array();
				field_create_instance($union_address_instance);
 
	
	$union_contact_field = array();
		$union_contact_field['field_name']	= 'union_contact_field';
		$union_contact_field['type']		= 'text';
			field_create_field($union_contact_field);
	
	$union_contact_instance = array();
		$union_contact_instance['field_name'] 	= 'union_contact_field';
		$union_contact_instance['entity_type'] 	= 'node';
		$union_contact_instance['bundle']	= 'union';
			field_create_instance($union_contact_instance);
 
	
}

function union_uninstall()
{

	$taxnav_vid = variable_get('taxnav_vocabulary');

	$terms_to_delete = array_merge( taxonomy_get_term_by_name('unions') , taxonomy_get_term_by_name('workers') , taxonomy_get_term_by_name('heavy') , taxonomy_get_term_by_name('non') );

		foreach($terms_to_delete as $term){
			if($term->vid == $taxnav_vid){
			taxonomy_term_delete($term->tid);
			}
		}


	$sql	= 'Select nid FROM {node} n WHERE n.type = :type';
	$result	= db_query($sql, array(':type' => 'union'));
	$nids	= array();

		foreach($result as $row){ $nids[]= $row->nid; }
		
		
	node_delete_multiple($nids);

	field_delete_field('union_image_field');
	field_delete_field('union_address_field');
	field_delete_field('union_contact_field');
	field_delete_field('union_website_field');

	node_type_delete('union');
	field_purge_batch(1000);
}

/*
$field = array(
      'field_name' => $name,
      'type' => 'image',
      'settings' => array(),
      'cardinality' => !empty($field_settings['cardinality']) ? $field_settings['cardinality'] : 1,
    );
    $field['settings'] = array_merge($field['settings'], $field_settings);
    field_create_field($field);

    $instance = array(
      'field_name' => $field['field_name'],
      'entity_type' => 'node',
      'label' => $name,
      'bundle' => $type_name,
      'required' => !empty($instance_settings['required']),
      'settings' => array(),
      'widget' => array(
        'type' => 'image_image',
        'settings' => array(),
      ),
    );
    $instance['settings'] = array_merge($instance['settings'], $instance_settings);
    $instance['widget']['settings'] = array_merge($instance['widget']['settings'], $widget_settings);
*/

	/*
	    $field = array(
	      'field_name' => 'taxonomy_vocabulary_union',
	      'type' => 'taxonomy_term_reference',
	      'cardinality' => FIELD_CARDINALITY_UNLIMITED,
	      'settings' => array(
		'allowed_values' => array(
		  array(
		    'vocabulary' => $taxnav_vid,
		    'parent' => $union_term_id,
		  ),
		),
	      ),
	    );
	    field_create_field($field);
	*/




//sure makes sense to do it like this but also makes me feel like I am missing small details so lets tuck it away.
/*
// Create all the fields we are adding to out content type.
foreach ( _union_installed_fields() as $field){
	#field_create_field($field);
}

// Create all the instances of out field
foreach (_union_installed_instances() as $instance){
	#$instance['entity_type']	= 'node';
	#$instance['bundle']		= 'union';
	#field_create_instance($instance);
}
*/


/*
// Loop over each of the fields defined by this module and delete
// all instances of the field, their data, and the field itself.
	foreach(array_keys(_union_installed_fields()) as $field){
	field_delete_field($field);
	}

// Loop over any remaining field instances attached to the job_post
// content type ( such as the body field) and delete them individually.
	$instances = field_info_instances('node','union');
	foreach( $instances as $instance_name => $instance ){
		field_delete_instance($instance);
	}
*/


?>
